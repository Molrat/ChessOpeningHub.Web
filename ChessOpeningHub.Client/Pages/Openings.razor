@page "/openings"
@using DataAccess.Models
@using ApiCalls
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<PageTitle>Openings</PageTitle>

<h1>Openings</h1>

<p>Get all openings uploaded by chess players</p>

@if (openings == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Opening name</th>
                <th>creator name</th>
                <th>description</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var opening in openings)
            {
                <tr>
                    <td @onclick="() => SetCurrentOpeningId(opening.Id)">
                        <NavLink class="nav-link" href="opening">
                            <span class="oi oi-list-rich" aria-hidden="true"></span> @opening.OpeningName
                        </NavLink>
                    </td>
                    <td>@opening.CreatorName</td>
                    <td>@opening.Description</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    private OpeningModel[]? openings;

    protected override async Task OnInitializedAsync()
    {
        openings = await ChessOpeningHubAPI.GetOpenings();
        SetCurrentOpeningId(0);
    }

    public async void SetCurrentOpeningId(int id)
    {
        await sessionStorage.SetItemAsync<int>("currentOpeningId", id);
    }
}
